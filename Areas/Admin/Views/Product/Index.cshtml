@model IEnumerable<Booking.Models.Product>
@{
    ViewData["Title"] = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}
<div class="container-fluid py-4">
    <a  onclick="window.location.href='/Admin/Product/Create'" class="btn bg-gradient-primary w-100">Create</a>
    <div class="row">
    <div class="col-12">
         <partial name="_SettingIcon"/>
        <div class="card my-4">
        <div class="card-header p-0 position-relative mt-n4 mx-3 z-index-2">
            <div class="bg-gradient-primary shadow-primary border-radius-lg pt-4 pb-3">
            <h6 class="text-white text-capitalize ps-3">Products table</h6>
            </div>
        </div>
        <div class="card-body px-0 pb-2">
            <div class="table-responsive p-0">
            <table class="table align-items-center mb-0">
                <thead>
                <tr>
                    <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">
                        <input type="checkbox" id="selectAll" />
                    </th>
                    <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Info</th>
                    <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7 ps-2">Description</th>
                    <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Quantity</th>
                    <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Price</th>
                    <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Sold</th>
                    <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Created At</th>
                    <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Updated At</th>
                    <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Created By</th>
                    <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Updated By</th>
                    <th class="text-secondary opacity-7"></th>
                    <button id="deleteSelected" class="btn btn-danger">Delete Selected</button>

                </tr>

                </thead>
                <tbody>
                @if (Model != null)
                {
                    @foreach (var item in Model)
                    {
                        <tr id="productRow_@item.ProductId" class="swipe-to-delete">
                             <td class="align-middle text-center">
                                  <input  type="checkbox" class="productCheckbox" data-product-id="@item.ProductId" />
                            </td>
                            <td>
                                <div class="d-flex px-2 py-1">
                                    <div>
                                        <img src="@item.Image" class="avatar avatar-sm me-3 border-radius-lg" alt="user1">
                                    </div>
                                    <div class="d-flex flex-column justify-content-center">
                                        <h6 class="mb-0 text-sm">@item.Name</h6>
                                        <p class="text-xs text-secondary mb-0">ID: @item.ProductId</p>
                                    </div>
                                </div>
                            </td>
                           
                            <td>
                                <p class="text-xs font-weight-bold mb-0">@item.Description</p>
                                <p class="text-xs text-secondary mb-0">Type: @item.ProductType?.Name</p>
                                <p class="text-xs text-secondary mb-0">Provider: @item.Provider?.Name</p>
                            </td>
                             <td class="align-middle text-center">
                                <p class="text-xs text-secondary mb-0">@item.Quantity</p>
                            </td>
                            <td class="align-middle text-center text-sm">
                                <p class="text-xs font-weight-bold mb-0">@item.Price vnÄ‘</p>
                            </td>
                            <td class="align-middle text-center">
                                <span class="text-secondary text-xs font-weight-bold">@item.Sold</span>
                            </td>
                            <td>
                                <span class="text-secondary text-xs font-weight-bold">@item.CreatedAt?.ToString("dd/MM/yyyy HH:mm tt")</span>
                            </td>
                            <td>
                                <span class="text-secondary text-xs font-weight-bold">@item.UpdatedAt?.ToString("dd/MM/yyyy HH:mm tt")</span>
                            </td>
                            <td>
                                <span class="text-secondary text-xs font-weight-bold">@item.CreatedBy</span>
                            </td>
                            <td>
                                <span class="text-secondary text-xs font-weight-bold">@item.UpdatedBy</span>
                            </td>
                            <td class="align-middle">
                                <a onclick="navigateTo('Edit', @item.ProductId)"  role="button" class="text-secondary btn font-weight-bold text-xs" data-toggle="tooltip" data-original-title="Edit user">
                                    Edit
                                </a>
                                <a onclick="deleteStaff(@item.ProductId)"  role="button" class="text-secondary font-weight-bold text-xs" data-toggle="tooltip" data-original-title="Edit user">
                                    <i class="btn-outline-primary btn fa-solid fa-x"></i>
                                </a>
                            </td>
                        </tr>
                    }
                }
                </tbody>
            </table>
            </div>
        </div>
        </div>
    </div>
</div>

@* <script src="~/assets/js/CRUD/CRUD.js"/>  *@
<script src="~/assets/js/CRUD/DeleteAllProduct.js"/>
@* 
<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Check/uncheck all checkboxes when the 'selectAll' checkbox is clicked
        document.getElementById('selectAll').addEventListener('click', function () {
            var checkboxes = document.querySelectorAll('.productCheckbox');
            checkboxes.forEach(function (checkbox) {
                checkbox.checked = this.checked;
            }, this);
        });

        // Enable/disable the 'Delete Selected' button based on checkbox selection
        var checkboxes = document.querySelectorAll('.productCheckbox');
        checkboxes.forEach(function (checkbox) {
            checkbox.addEventListener('click', function () {
                var anyChecked = document.querySelectorAll('.productCheckbox:checked').length > 0;
                document.getElementById('deleteSelected').disabled = !anyChecked;
            });
        });

        // Handle 'Delete Selected' button click
        document.getElementById('deleteSelected').addEventListener('click', function () {
            var selectedProductIds = Array.from(document.querySelectorAll('.productCheckbox:checked')).map(function (checkbox) {
                return checkbox.getAttribute('data-product-id');
            });

            if (selectedProductIds.length > 0) {
                console.log('Selected Product IDs:', selectedProductIds);
                deleteSelectedProducts(selectedProductIds);
            } else {
                console.log('No products selected.');
            }
        });

        function deleteSelectedProducts(productIds) {
            var apiUrl = '/api/ProductApi/deleteAll';

            fetch(apiUrl, {
                method: 'DELETE',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(productIds),
            })
            .then(response => {
                if (response.ok) {
                    return response.json();
                } else {
                    throw new Error('Failed to delete products');
                }
            })
            .then(result => {
                if (result.success) {
                    alert(result.message);
                    location.reload();
                } else {
                    alert('Failed to delete products: ' + result.message);
                }
            })
            .catch(error => {
                console.error('Error deleting products:', error);
                alert('An error occurred while deleting products.');
            });
        }
    });
</script>
 *@
